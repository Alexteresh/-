import os
import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
from flask import Flask
import threading

API_TOKEN = '7615496508:AAFn-YYA9gzAhXCN8zEEdiskTTXMaqMJFto'
ADMIN_ID = 7784034570

bot = Bot(token=API_TOKEN, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot)

# –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_kb = ReplyKeyboardMarkup(resize_keyboard=True)
main_kb.add("–ì–æ—Ç–æ–≤—ã–µ –∫–ª–∞–¥—ã", "–°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º")

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≥—Ä–∞–º–º–∞–º–∏
gram_kb = ReplyKeyboardMarkup(resize_keyboard=True)
gram_kb.row("1 –≥—Ä–∞–º–º", "2 –≥—Ä–∞–º–º–∞")
gram_kb.row("3 –≥—Ä–∞–º–º–∞", "4 –≥—Ä–∞–º–º–∞")
gram_kb.add("5 –≥—Ä–∞–º–º")

# Flask –¥–ª—è –ø–∏–Ω–≥–∞
app = Flask(__name__)
@app.route('/')
def home():
    return '–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç'

def run_flask():
    app.run(host='0.0.0.0', port=8080)

# –°—Ç–∞—Ä—Ç
@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_kb)

# –ì—Ä–∞–º–º–æ–≤–∫–∞
@dp.message_handler(lambda msg: msg.text == "–ì–æ—Ç–æ–≤—ã–µ –∫–ª–∞–¥—ã")
async def show_grams(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –æ–±—ä—ë–º:", reply_markup=gram_kb)

# –û—Ç–≤–µ—Ç –Ω–∞ –≥—Ä–∞–º–º—ã
@dp.message_handler(lambda msg: msg.text in [
    "1 –≥—Ä–∞–º–º", "2 –≥—Ä–∞–º–º–∞", "3 –≥—Ä–∞–º–º–∞", "4 –≥—Ä–∞–º–º–∞", "5 –≥—Ä–∞–º–º"
])
async def send_price(message: types.Message):
    prices = {
        "1 –≥—Ä–∞–º–º": "400.000 VND",
        "2 –≥—Ä–∞–º–º–∞": "800.000 VND",
        "3 –≥—Ä–∞–º–º–∞": "1.200.000 VND",
        "4 –≥—Ä–∞–º–º–∞": "1.600.000 VND",
        "5 –≥—Ä–∞–º–º": "2.000.000 VND"
    }
    await message.answer(
        f"<b>–¶–µ–Ω–∞:</b> {prices[message.text]}\n\n"
        f"<b>USDT-–∫–æ—à–µ–ª—ë–∫:</b>\n<code>TKjjYDJveXkr3Qmk37XraFUnDCoHuAX3zc</code>\n\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—à–ª–∏—Ç–µ —Å—é–¥–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞."
    )

# –û–ø–µ—Ä–∞—Ç–æ—Ä
@dp.message_handler(lambda msg: msg.text == "–°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º")
async def contact(message: types.Message):
    await message.answer("–û–ø–µ—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏. –û–∂–∏–¥–∞–π—Ç–µ.")

# –§–æ—Ç–æ –æ–ø–ª–∞—Ç—ã
@dp.message_handler(content_types=types.ContentType.PHOTO)
async def handle_photo(message: types.Message):
    photo = message.photo[-1]
    caption = (
        f"üí∏ <b>–ü–ª–∞—Ç—ë–∂ –æ—Ç</b> @{message.from_user.username or '–±–µ–∑ –Ω–∏–∫–∞'}\n"
        f"<b>ID:</b> <code>{message.from_user.id}</code>"
    )
    await bot.send_photo(chat_id=ADMIN_ID, photo=photo.file_id, caption=caption)
    await message.answer("–°–∫—Ä–∏–Ω –ø–æ–ª—É—á–µ–Ω! –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.")

# –ó–∞–ø—É—Å–∫
def run_bot():
    executor.start_polling(dp, skip_updates=True)

if __name__ == '__main__':
    threading.Thread(target=run_flask).start()
    run_bot()
