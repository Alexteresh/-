import os
import asyncio
import logging
from threading import Thread

from flask import Flask
from aiogram import Bot, Dispatcher, types, F
from aiogram.enums import ParseMode, ContentType
from aiogram.client.default import DefaultBotProperties
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.storage.memory import MemoryStorage

# üìå –ù–∞—Å—Ç—Ä–æ–π–∫–∏
API_TOKEN = '7615496508:AAFn-YYA9gzAhXCN8zEEdiskTTXMagMJFto'
ADMIN_ID   = 7784034570

# –õ–æ–≥–∏
logging.basicConfig(level=logging.INFO)

# Flask-—Å–µ—Ä–≤–µ—Ä (Uptime pings)
app = Flask(__name__)
@app.route('/')
def alive():
    return "Bot is alive!"

def run_flask():
    port = int(os.environ.get("PORT", 8080))
    app.run(host="0.0.0.0", port=port)

# –ó–∞–ø—É—Å–∫–∞–µ–º Flask –≤ —Ñ–æ–Ω–µ
Thread(target=run_flask, daemon=True).start()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Aiogram
bot = Bot(
    token=API_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher(storage=MemoryStorage())

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_data: dict[int, dict[str, str]] = {}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text="üåø Indica"),
            KeyboardButton(text="üå± Sativa"),
            KeyboardButton(text="üîÄ Hybrid")
        ]
    ],
    resize_keyboard=True
)
amount_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="1 –≥—Ä–∞–º–º"), KeyboardButton(text="2 –≥—Ä–∞–º–º–∞")],
        [KeyboardButton(text="3 –≥—Ä–∞–º–º–∞"), KeyboardButton(text="4 –≥—Ä–∞–º–º–∞")],
        [KeyboardButton(text="5 –≥—Ä–∞–º–º")],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

# /start
@dp.message(F.text == "/start")
async def cmd_start(message: types.Message):
    user_data.pop(message.from_user.id, None)
    await message.answer("–ü—Ä–∏–≤–µ—Ç, –±—Ä–æ! –í—ã–±–µ—Ä–∏ —Å–æ—Ä—Ç —Å—Ç–∞—Ñ—Ñ–∞ üåø", reply_markup=main_menu)

# –í—ã–±–æ—Ä —Å–æ—Ä—Ç–∞
@dp.message(F.text.in_(["üåø Indica", "üå± Sativa", "üîÄ Hybrid"]))
async def choose_strain(message: types.Message):
    user_data[message.from_user.id] = {"strain": message.text}
    await message.answer(f"‚úÖ –í—ã–±—Ä–∞–Ω —Å–æ—Ä—Ç: {message.text}\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –æ–±—ä—ë–º üìã", reply_markup=amount_menu)

# –ù–∞–∑–∞–¥
@dp.message(F.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def go_back(message: types.Message):
    user_data.pop(message.from_user.id, None)
    await message.answer("–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üåø", reply_markup=main_menu)

# –í—ã–±–æ—Ä –æ–±—ä—ë–º–∞
@dp.message(F.text.in_(["1 –≥—Ä–∞–º–º", "2 –≥—Ä–∞–º–º–∞", "3 –≥—Ä–∞–º–º–∞", "4 –≥—Ä–∞–º–º–∞", "5 –≥—Ä–∞–º–º"]))
async def choose_amount(message: types.Message):
    uid = message.from_user.id
    data = user_data.get(uid, {})
    data["amount"] = message.text
    user_data[uid] = data

    prices = {
        "1 –≥—Ä–∞–º–º": ("400 000 VND", "15.8 USDT"),
        "2 –≥—Ä–∞–º–º–∞": ("800 000 VND", "31.6 USDT"),
        "3 –≥—Ä–∞–º–º–∞": ("1 200 000 VND", "47.4 USDT"),
        "4 –≥—Ä–∞–º–º–∞": ("1 600 000 VND", "63.2 USDT"),
        "5 –≥—Ä–∞–º–º": ("2 000 000 VND", "78.9 USDT"),
    }
    price_vnd, price_usdt = prices[message.text]

    await message.answer(
        f"‚úÖ –¢—ã –≤—ã–±—Ä–∞–ª: <b>{message.text}</b>\n"
        f"üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å: {price_vnd} (~{price_usdt})\n\n"
        f"–ü–µ—Ä–µ–≤–µ–¥–∏ –Ω–∞ –∫–æ—à–µ–ª—ë–∫ (TRC20):\n"
        f"<code>TKjjYDJveXkr3Qmk37XraFUnDCoHuAX3zc</code>\n\n"
        f"üì∏ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—à–ª–∏ —Å—é–¥–∞ —Å–∫—Ä–∏–Ω —á–µ–∫–∞"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫—Ä–∏–Ω–∞ –æ–ø–ª–∞—Ç—ã
@dp.message(F.content_type == ContentType.PHOTO)
async def handle_photo(message: types.Message):
    uid = message.from_user.id
    data = user_data.get(uid, {})
    strain = data.get("strain", "–Ω–µ —É–∫–∞–∑–∞–Ω")
    amount = data.get("amount", "–Ω–µ —É–∫–∞–∑–∞–Ω")
    username = message.from_user.username or str(uid)

    caption = (
        f"üì• –û–ø–ª–∞—Ç–∞ –æ—Ç @{username}\n"
        f"üß™ –°–æ—Ä—Ç: {strain}\n"
        f"üì¶ –û–±—ä—ë–º: {amount}"
    )
    await bot.send_photo(chat_id=ADMIN_ID, photo=message.photo[-1].file_id, caption=caption)
    await message.answer("‚úÖ –°–∫—Ä–∏–Ω –ø—Ä–∏–Ω—è—Ç. –û–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    # –í Shell Replit: pip install aiogram==3.7.0 flask
    asyncio.run(main())
